,mcqs
1,"
1. Which of these best describes an array?
a) A data structure that shows a hierarchical behavior
b) Container of objects of similar types
c) Arrays are immutable once initialised
d) Array is not a data structure
View AnswerAnswer: b
Explanation: Array contains elements only of the same type."
5,"
2. How do you initialize an array in C?
a) int arr[3] = (1,2,3);
b) int arr(3) = {1,2,3};
c) int arr[3] = {1,2,3};
d) int arr(3) = (1,2,3);
View AnswerAnswer: c
Explanation: This is the syntax to initialize an array in C."
6,"
3. How do you instantiate an array in Java?
a) int arr[] = new int(3);
b) int arr[];
c) int arr[] = new int[3];
d) int arr() = new int(3);
View AnswerAnswer: c
Explanation: Note that int arr[]; is declaration whereas int arr[] = new int[3]; is to instantiate an array."
7,"
4. Which of the following is the correct way to declare a multidimensional array in Java?
a) int[] arr;
b) int arr[[]];
c) int[][]arr;
d) int[[]] arr;
View AnswerAnswer: c
Explanation: The syntax to declare multidimensional array in java is either int[][] arr; or int arr[][];
5. What is the output of the following Java code?
{
	{
		System.out.println(arr[2]);
		System.out.println(arr[4]);
	}
}
a) 3 and 5
b) 5 and 3
c) 2 and 4
d) 4 and 2
View AnswerAnswer: a
Explanation: Array indexing starts from 0."
8,"
6. What is the output of the following Java code?
public class array
{
	{
		System.out.println(arr[5]);
	}
}
a) 4
b) 5
c) ArrayIndexOutOfBoundsException
d) InavlidInputException
View AnswerAnswer: c
Explanation: Trying to access an element beyond the limits of an array gives ArrayIndexOutOfBoundsException."
12,"
7. When does the ArrayIndexOutOfBoundsException occur?
a) Compile-time
b) Run-time
c) Not an error
d) Not an exception at all
View AnswerAnswer: b
Explanation: ArrayIndexOutOfBoundsException is a run-time exception and the compilation is error-free."
13,"
8. Which of the following concepts make extensive use of arrays?
a) Binary trees
b) Scheduling of processes
c) Caching
d) Spatial locality
View AnswerAnswer: d
Explanation: Whenever a particular memory location is referred to, it is likely that the locations nearby are also referred, arrays are stored as contiguous blocks in memory, so if you want to access array elements, spatial locality makes it to access quickly."
14,"
9. What are the advantages of arrays?
a) Objects of mixed data types can be stored
b) Elements in an array cannot be sorted
c) Index of first element of an array is 1
d) Easier to store elements of same data type
View AnswerAnswer: d
Explanation: Arrays store elements of the same data type and present in continuous memory locations. 
10. What are the disadvantages of arrays?
a) Data structure like queue or stack cannot be implemented
b) There are chances of wastage of memory space if elements inserted in an array are lesser than the allocated size
c) Index value of an array can be negative
d) Elements are sequentially accessed
View AnswerAnswer: b
Explanation: Arrays are of fixed size. If we insert elements less than the allocated size, unoccupied positions canï¿½t be used again. Wastage will occur in memory."
15,"
11. Assuming int is of 4bytes, what is the size of int arr[15];?
a) 15
b) 19
c) 11
d) 60
View AnswerAnswer: d
Explanation: Since there are 15 int elements and each int is of 4bytes, we get 15*4 = 60bytes."
19,"
12. In general, the index of the first element in an array is __________
a) 0
b) -1
c) 2
d) 1
View AnswerAnswer: a
Explanation: In general, Array Indexing starts from 0. Thus, the index of the first element in an array is 0. 
13. Elements in an array are accessed _____________
a) randomly
b) sequentially
c) exponentially
d) logarithmically
View AnswerAnswer: a
Explanation: Elements in an array are accessed randomly. In Linked lists, elements are accessed sequentially.
Sanfoundry Global Education & Learning Series ï¿½ Data Structure.
To practice all areas of Data Structure, here is complete set of 1000+ Multiple Choice Questions and Answers."
21,"
ï¿½ Next - Data Structure Questions and Answers ï¿½ Stack Operations ï¿½ 1 1. Process of inserting an element in stack is called ____________
a) Create
b) Push
c) Evaluation
d) Pop
View AnswerAnswer: b
Explanation: Push operation allows users to insert elements in the stack. If the stack is filled completely and trying to perform push operation stack ï¿½ overflow can happen."
25,"
2. Process of removing an element from stack is called __________
a) Create
b) Push
c) Evaluation
d) Pop
View AnswerAnswer: d
Explanation: Elements in the stack are removed using pop operation. Pop operation removes the top most element in the stack i.e. last entered element."
26,"
3. In a stack, if a user tries to remove an element from an empty stack it is called _________
a) Underflow
b) Empty collection
c) Overflow
d) Garbage Collection
View AnswerAnswer: a
Explanation: Underflow occurs when the user performs a pop operation on an empty stack. Overflow occurs when the stack is full and the user performs a push operation. Garbage Collection is used to recover the memory occupied by objects that are no longer used."
27,"
4. Pushing an element into stack already having five elements and stack size of 5, then stack becomes ___________
a) Overflow
b) Crash
c) Underflow
d) User flow
View AnswerAnswer: a
Explanation: The stack is filled with 5 elements and pushing one more element causes a stack overflow. This results in overwriting memory, code and loss of unsaved work on the computer."
28,"
5. Entries in a stack are ï¿½orderedï¿½. What is the meaning of this statement?
a) A collection of stacks is sortable
b) Stack entries may be compared with the ï¿½<ï¿½ operation
c) The entries are stored in a linked list
d) There is a Sequential entry that is one by one
View AnswerAnswer: d
Explanation: In stack data structure, elements are added one by one using push operation. Stack follows LIFO Principle i.e. Last In First Out(LIFO)."
32,"
6. Which of the following is not the application of stack?
a) A parentheses balancing program
b) Tracking of local variables at run time
c) Compiler Syntax Analyzer
d) Data Transfer between two asynchronous process
View AnswerAnswer: d
Explanation: Data transfer between the two asynchronous process uses the queue data structure for synchronisation. The rest are all stack applications."
33,"
7. Consider the usual algorithm for determining whether a sequence of parentheses is balanced. The maximum number of parentheses that appear on the stack AT ANY ONE TIME when the algorithm analyzes: (()(())(()))?
a) 1
b) 2
c) 3
d) 4 or more
View AnswerAnswer: c
Explanation: In the entire parenthesis balancing method when the incoming token is a left parenthesis it is pushed into stack. A right parenthesis makes pop operation to delete the elements in stack till we get left parenthesis as top most element. 3 elements are there in stack before right parentheses comes. Therefore, maximum number of elements in stack at run time is 3."
34,"
8. Consider the usual algorithm for determining whether a sequence of parentheses is balanced. Suppose that you run the algorithm on a sequence that contains 2 left parentheses and 3 right parentheses (in some order). The maximum number of parentheses that appear on the stack AT ANY ONE TIME during the computation?
a) 1
b) 2
c) 3
d) 4 or more
View AnswerAnswer: b
Explanation: In the entire parenthesis balancing method when the incoming token is a left parenthesis it is pushed into stack. A right parenthesis makes pop operation to delete the elements in stack till we get left parenthesis as top most element. 2 left parenthesis are pushed whereas one right parenthesis removes one of left parenthesis. 2 elements are there before right parenthesis which is the maximum number of elements in stack at run time."
35,"
9. What is the value of the postfix expression 6 3 2 4 + ï¿½ *?
a) 1
b) 40
c) 74
d) -18
View AnswerAnswer: d
Explanation: Postfix Expression is (6*(3-(2+4))) which results -18 as output."
39,"
10. Here is an infix expression: 4 + 3*(6*3-12). Suppose that we are using the usual stack algorithm to convert the expression from infix to postfix notation. The maximum number of symbols that will appear on the stack AT ONE TIME during the conversion of this expression?
a) 1
b) 2
c) 3
d) 4
View AnswerAnswer: d
Explanation: When we perform the conversion from infix to postfix expression +, *, (, * symbols are placed inside the stack. A maximum of 4 symbols are identified during the entire conversion."
40,"
Sanfoundry Global Education & Learning Series ï¿½ Data Structure.
To practice all areas of Data Structure, here is complete set of 1000+ Multiple Choice Questions and Answers."
42,"
ï¿½ Prev - Data Structure Questions and Answers ï¿½ Array and Array Operationsï¿½ Next - Data Structure Questions and Answers ï¿½ Stack Operations ï¿½ 2 1. The postfix form of the expression (A+ B)*(C*D- E)*F / G is?
a) AB+ CD*E ï¿½ FG /**
b) AB + CD* E ï¿½ F **G /
c) AB + CD* E ï¿½ *F *G /
d) AB + CDE * ï¿½ * F *G /
View AnswerAnswer: c
Explanation: (((A+ B)*(C*D- E)*F) / G) is converted to postfix expression as
(AB+(*(C*D- E)*F )/ G)
(AB+CD*E-*F) / G
(AB+CD*E-*F * G/). Thus Postfix expression is AB+CD*E-*F*G/"
46,"
2. The data structure required to check whether an expression contains a balanced parenthesis is?
a) Stack
b) Queue
c) Array
d) Tree
View AnswerAnswer: a
Explanation: The stack is a simple data structure in which elements are added and removed based on the LIFO principle. Open parenthesis is pushed into the stack and a closed parenthesis pops out elements till the top element of the stack is its corresponding open parenthesis. If the stack is empty, parenthesis is balanced otherwise it is unbalanced."
47,"
3. What data structure would you mostly likely see in non recursive implementation of a recursive algorithm?
a) Linked List
b) Stack
c) Queue
d) Tree
View AnswerAnswer: b
Explanation: In recursive algorithms, the order in which the recursive process comes back is the reverse of the order in which it goes forward during execution. The compiler uses the stack data structure to implement recursion. In the forwarding phase, the values of local variables, parameters and the return address are pushed into the stack at each recursion level. In the backing-out phase, the stacked address is popped and used to execute the rest of the code."
48,"
4. The process of accessing data stored in a serial access memory is similar to manipulating data on a ________
a) Heap
b) Binary Tree
c) Array
d) Stack
View AnswerAnswer: d
Explanation: In serial access memory data records are stored one after the other in which they are created and are accessed sequentially. In stack data structure, elements are accessed sequentially. Stack data structure resembles the serial access memory."
49,"
5. The postfix form of A*B+C/D is?
a) *AB/CD+
b) AB*CD/+
c) A*BC+/D
d) ABCD+/*
View AnswerAnswer: b
Explanation: Infix expression is (A*B)+(C/D)
AB*+(C/D)
AB*CD/+. Thus postfix expression is AB*CD/+."
53,"
6. Which data structure is needed to convert infix notation to postfix notation?
a) Branch
b) Tree
c) Queue
d) Stack
View AnswerAnswer: d
Explanation: The Stack data structure is used to convert infix expression to postfix expression. The purpose of stack is to reverse the order of the operators in the expression. It also serves as a storage structure, as no operator can be printed until both of its operands have appeared."
54,"
7. The prefix form of A-B/ (C * D ^ E) is?
a) -/*^ACBDE
b) -ABCD*^DE
c) -A/B*C^DE
d) -A/BC*^DE
View AnswerAnswer: c
Explanation: Infix Expression is (A-B)/(C*D^E)
(-A/B)(C*D^E)
-A/B*C^DE. Thus prefix expression is -A/B*C^DE."
55,"
8. What is the result of the following operation?
Top (Push (S, X))
a) X
b) X+S
c) S
d) XS
View AnswerAnswer: a
Explanation: The function Push(S,X) pushes the value X in the stack S. Top() function gives the value which entered last. X entered into stack S at last."
56,"
9. The prefix form of an infix expression (p + q) ï¿½ (r * t) is?
a) + pq ï¿½ *rt
b) ï¿½ +pqr * t
c) ï¿½ +pq * rt
d) ï¿½ + * pqrt
View AnswerAnswer: c
Explanation: Given Infix Expression is ((p+q)-(r*t))
(+pq)-(r*t)
(-+pq)(r*t)
-+pq*rt. Thus prefix expression is -+pq*rt."
60,"
10. Which data structure is used for implementing recursion?
a) Queue
b) Stack
c) Array
d) List
View AnswerAnswer: b
Explanation: Stacks are used for the implementation of Recursion."
61,"
Sanfoundry Global Education & Learning Series ï¿½ Data Structure.
To practice all areas of Data Structure for Interviews, here is complete set of 1000+ Multiple Choice Questions and Answers."
63,"
ï¿½ Prev - Data Structure Questions and Answers ï¿½ Stack Operations ï¿½ 1ï¿½ Next - Data Structure Questions and Answers ï¿½ Stack Operations ï¿½ 3 1. The result of evaluating the postfix expression 5, 4, 6, +, *, 4, 9, 3, /, +, * is?
a) 600
b) 350
c) 650
d) 588
View AnswerAnswer: b
Explanation: The postfix expression is evaluated using stack. We will get the infix expression as
(5*(4+6))*(4+9/3). On solving the Infix Expression, we get
(5*(10))*(4+3)
= 50*7
= 350."
67,"
2. Convert the following infix expressions into its equivalent postfix expressions.
(A + B D)/(E ï¿½ F)+G
a) (A B D  + E F ï¿½ / G +)
b) (A B D + E F ï¿½ / G +)
c) (A B D  + E F/- G +)
d) (A B D  E F +  / ï¿½ G +)
View AnswerAnswer: a
Explanation: The given infix expression is (A + B D)/(E ï¿½ F)+G.
(A B D ^ + ) / (E ï¿½ F) +G
(A B D ^ + E F ï¿½ ) + G. ï¿½/ï¿½ is present in stack.
A B D ^ + E F ï¿½ / G +. Thus Postfix Expression is A B D ^ + E F ï¿½ / G +."
68,"
3. Convert the following Infix expression to Postfix form using a stack.
x + y * z + (p * q + r) * s, Follow usual precedence rule and assume that the expression is legal.
a) xyz*+pq*r+s*+
b) xyz*+pq*r+s+*
c) xyz+*pq*r+s*+
d) xyzp+**qr+s*+
View AnswerAnswer: a
Explanation: The Infix Expression is x + y * z + (p * q + r) * s.
(x y z ) + (p * q + r) * s. ï¿½+ï¿½, ï¿½*ï¿½ are present in stack.
(x y z * + p q * r) * s. ï¿½+ï¿½ is present in stack.
x y z * + p q * r + s * +. Thus Postfix Expression is x y z * + p q * r + s * +."
69,"
4. Which of the following statement(s) about stack data structure is/are NOT correct?
a) Linked List are used for implementing Stacks
b) Top of the Stack always contain the new node
c) Stack is the FIFO data structure
d) Null link is present in the last node at the bottom of the stack
View AnswerAnswer: c
Explanation: Stack follows LIFO."
70,"
5. Consider the following operation performed on a stack of size 5.
Push(1);"
71,"
Pop();"
72,"
Push(2);"
73,"
Push(3);"
74,"
Pop();"
75,"
Push(4);"
76,"
Pop();"
77,"
Pop();"
78,"
Push(5);"
83,"
After the completion of all operation, the number of elements present in stack is?
a) 1
b) 2
c) 3
d) 4
View AnswerAnswer: a
Explanation: Number of elements present in stack is equal to the difference between number of push operations and number of pop operations. Number of elements is 5-4=1."
84,"
6. Which of the following is not an inherent application of stack?
a) Reversing a string
b) Evaluation of postfix expression
c) Implementation of recursion
d) Job scheduling
View AnswerAnswer: d
Explanation: Job Scheduling is not performed using stacks."
85,"
7. The type of expression in which operator succeeds its operands is?
a) Infix Expression
b) Prefix Expression
c) Postfix Expression
d) Both Prefix and Postfix Expressions
View AnswerAnswer: c
Explanation: The expression in which operator succeeds its operands is called postfix expression. The expression in which operator precedes the operands is called prefix expression. If an operator is present between two operands, then it is called infix expressions."
86,"
8. Assume that the operators +,-, X are left associative and ^ is right associative. The order of precedence (from highest to lowest) is ^, X, +, -. The postfix expression for the infix expression a + b X c ï¿½ d ^ e ^ f is?
a) abc X+ def ^^ ï¿½
b) abc X+ de^f^ ï¿½
c) ab+c Xd ï¿½ e ^f^
d) -+aXbc^ ^def
View AnswerAnswer: b
Explanation: Given Infix Expression is a + b X c ï¿½ d ^ e ^ f.
(a b c X +) (d ^ e ^ f). ï¿½ï¿½ï¿½ is present in stack.
(a b c X + d e ^ f ^ -). Thus the final expression is (a b c X + d e ^ f ^ -)."
90,"
9. If the elements ï¿½Aï¿½, ï¿½Bï¿½, ï¿½Cï¿½ and ï¿½Dï¿½ are placed in a stack and are deleted one at a time, what is the order of removal?
a) ABCD
b) DCBA
c) DCAB
d) ABDC
View AnswerAnswer: b
Explanation: Stack follows LIFO(Last In First Out). So the removal order of elements are DCBA."
91,"
Sanfoundry Global Education & Learning Series ï¿½ Data Structure.
To practice all areas of Data Structure for Freshers, here is complete set of 1000+ Multiple Choice Questions and Answers."
93,"
ï¿½ Prev - Data Structure Questions and Answers ï¿½ Stack Operations ï¿½ 2ï¿½ Next - Data Structure Questions and Answers ï¿½ Queue Operations 1. A linear list of elements in which deletion can be done from one end (front) and insertion can take place only at the other end (rear) is known as _____________
a) Queue
b) Stack
c) Tree
d) Linked list
View AnswerAnswer: a
Explanation: Linear list of elements in which deletion is done at front side and insertion at rear side is called Queue. In stack we will delete the last entered element first."
97,"
2. The data structure required for Breadth First Traversal on a graph is?
a) Stack
b) Array
c) Queue
d) Tree
View AnswerAnswer: c
Explanation: In Breadth First Search Traversal, BFS, starting vertex is first taken and adjacent vertices which are unvisited are also taken. Again, the first vertex which was added as an unvisited adjacent vertex list will be considered to add further unvisited vertices of the graph. To get the first unvisited vertex we need to follows First In First Out principle. Queue uses FIFO principle."
98,"
3. A queue follows __________
a) FIFO (First In First Out) principle
b) LIFO (Last In First Out) principle
c) Ordered array
d) Linear tree
View AnswerAnswer: a
Explanation: Element first added in queue will be deleted first which is FIFO principle."
99,"
4. Circular Queue is also known as ________
a) Ring Buffer
b) Square Buffer
c) Rectangle Buffer
d) Curve Buffer
View AnswerAnswer: a
Explanation: Circular Queue is also called as Ring Buffer. Circular Queue is a linear data structure in which last position is connected back to the first position to make a circle. It forms a ring structure."
103,"
5. If the elements ï¿½Aï¿½, ï¿½Bï¿½, ï¿½Cï¿½ and ï¿½Dï¿½ are placed in a queue and are deleted one at a time, in what order will they be removed?
a) ABCD
b) DCBA
c) DCAB
d) ABDC
View AnswerAnswer: a
Explanation: Queue follows FIFO approach. i.e. First in First Out Approach. So, the order of removal elements are ABCD."
104,"
6. A data structure in which elements can be inserted or deleted at/from both ends but not in the middle is?
a) Queue
b) Circular queue
c) Dequeue
d) Priority queue
View AnswerAnswer: c
Explanation: In dequeuer, we can insert or delete elements from both the ends. In queue, we will follow first in first out principle for insertion and deletion of elements. Element with least priority will be deleted in a priority queue."
105,"
7. A normal queue, if implemented using an array of size MAX_SIZE, gets full when?
a) Rear = MAX_SIZE ï¿½ 1
b) Front = (rear + 1)mod MAX_SIZE
c) Front = rear + 1
d) Rear = front
View AnswerAnswer: a
Explanation: When Rear = MAX_SIZE ï¿½ 1, there will be no space left for the elements to be added in queue. Thus queue becomes full."
109,"
8. Queues serve major role in ______________
a) Simulation of recursion
b) Simulation of arbitrary linked list
c) Simulation of limited resource allocation
d) Simulation of heap sort
View AnswerAnswer: c
Explanation: Simulation of recursion uses stack data structure. Simulation of arbitrary linked lists uses linked lists. Simulation of resource allocation uses queue as first entered data needs to be given first priority during resource allocation. Simulation of heap sort uses heap data structure."
110,"
9. Which of the following is not the type of queue?
a) Ordinary queue
b) Single ended queue
c) Circular queue
d) Priority queue
View AnswerAnswer: b
Explanation: Queue always has two ends. So, single ended queue is not the type of queue."
111,"
Sanfoundry Global Education & Learning Series ï¿½ Data Structure."
115,"
To practice all areas of Data Structure, here is complete set of 1000+ Multiple Choice Questions and Answers."
117,"
ï¿½ Prev - Data Structure Questions and Answers ï¿½ Stack Operations ï¿½ 3ï¿½ Next - Data Structure Questions and Answers ï¿½ Singly Linked List Operations ï¿½ 1 1. A linear collection of data elements where the linear node is given by means of pointer is called?
a) Linked list
b) Node list
c) Primitive list
d) Unordered list
View AnswerAnswer: a
Explanation: In Linked list each node has its own data and the address of next node. These nodes are linked by using pointers. Node list is an object that consists of a list of all nodes in a document with in a particular selected set of nodes."
121,"
2. Consider an implementation of unsorted singly linked list. Suppose it has its representation with a head pointer only. Given the representation, which of the following operation can be implemented in O(1) time?
i) Insertion at the front of the linked list
ii) Insertion at the end of the linked list
iii) Deletion of the front node of the linked list
iv) Deletion of the last node of the linked list
a) I and II
b) I and III
c) I, II and III
d) I, II and IV
View AnswerAnswer: b
Explanation: We know the head node in the given linked list. Insertion and deletion of elements at the front of the linked list completes in O (1) time whereas for insertion and deletion at the last node requires to traverse through every node in the linked list. Suppose there are n elements in a linked list, we need to traverse through each node. Hence time complexity becomes O(n)."
122,"
3. In linked list each node contains a minimum of two fields. One field is data field to store the data second field is?
a) Pointer to character
b) Pointer to integer
c) Pointer to node
d) Node
View AnswerAnswer: c
Explanation: Each node in a linked list contains data and a pointer (reference) to the next node. Second field contains pointer to node."
126,"
4. What would be the asymptotic time complexity to add a node at the end of singly linked list, if the pointer is initially pointing to the head of the list?
a) O(1)
b) O(n)
c) (n)
d) (1)
View AnswerAnswer: c
Explanation: In case of a linked list having n elements, we need to travel through every node of the list to add the element at the end of the list. Thus asymptotic time complexity is (n)."